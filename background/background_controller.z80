; Project Beest
; Background Control Routines
; Developed by Caio Souza Oliveira
; 7 Aug 2019

; initialize Background 
export bgc_initialize_background

bgc_initialize_background:
    ; set background scrolling to (0,0)
    ld a, 0
    ld [rSCX], a
    ld [rSCY], a
    
    ; clear screen
    call clear_lcd
    ret

; loads background palettes
; hl: holds address to first byte palette
; de: number of bytes to be loaded
; bc: holds palette index
bgc_load_background_palette:
    ld a, c
    ; multiplies index by 8, to target individual palettes by index, rather than colors.
    rla
    rla
    rla
    ld c, a
    ; set palette write mode (rBCPS)
    ; setting the MSBit of BCPS will increment allow writing to the palette registers with auto increment
    ; that after writing to BCPD, the lower 7 bits of BCPDS will be incremented
    ld a, $80
    or a, c
    ld [rBCPS], a
.load_palette_bytes:
    ld a, [hl]
    ld [rBCPD], a
    inc hl
    dec de
    ld a, e
    or d
    jr nz, .load_palette_bytes
    ret

; clear_lcd function
; args: no arguments
; return: no return
clear_lcd:
    ld a, [rLCDC]
    rlca
    ret nc

.wait_vblank
        ld a, [rLY]
        cp 145
        jr nz, .wait_vblank
        ld a,[rLCDC]
        res 7, a
        ld [rLCDC],a 
        ret 

; Busy wait for VRAM
bgc_wait_for_VRAM:
    push hl
    ld   hl, rSTAT
.wait_for_vram:           
    bit  $01, [hl]
    jr   nz, .wait_for_vram 
    pop hl
    ret
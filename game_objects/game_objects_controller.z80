; Project Beest
; Game Objects Controller
; Developed by Caio Souza Oliveira
; 01 Oct 2019

; Initialize Game Object
; a: Target game object index (0-15)
; de: game object position (d: X, e: Y)
; c: target game object sprite
goc_initialize_game_object:
    
    ; After calling goc_get_gameobject_address, hl holds the address to the target game object sprite
    call goc_get_gameobject_address

    ; Note: In global_variables.z80 will holds the two halfs of the sprites in sequence.
    ; That's why hl is always incremented between each value loaded to the game object.
    ; Y
    ld a, e
    ld [hl], a
    inc hl

    ; X
    ld a, d
    ld [hl], a
    inc hl

    ; Tile
    ld a, c
    ld [hl], a
    inc hl

    ; Attribute
    ld a, $00
    ld [hl], a
    inc hl

    ; Y
    ld a, e
    ld [hl], a
    inc hl

    ; X (+0x8)
    ld a, d
    add a, $08
    ld [hl], a
    inc hl

    ; Tile 2
    ; The four parts of game object (4 tiles) must be loaded in sequence in memory.
    ld a, c
    add a, $02
    ld [hl], a
    inc hl

    ; Attribute
    ld a, $00
    ld [hl], a
    inc hl

    ret

; Returns base address for target game object
; a: target game objecy
; hl: initial address of the game object register
goc_get_gameobject_address:
    cp a, $00
    ld hl, gobj_0_y
    ret z
    cp a, $01
    ld hl, gobj_1_y
    ret 
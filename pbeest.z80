; Project Beest
; Main Assembly File
; Developed by Caio Souza Oliveira
; 7 Aug 2019

; includes
include "inc/hardware.inc"

; interrupt routine reservation
section "interrupt_vector", rom0[$0040]
include "infra/interrupt_vector.z80"

; main code section
section "start", rom0[$0100]
    nop 
    jp main

; rom header definition (macro defined in inc/hardware.inc)
; note: ROM name must have 15 bytes (the number indicate the stable build number)
    ROM_HEADER_COLOR    "PBEEST.00000001", CART_MBC5_RAM_BATTERY, ROM_1536K, RAM_32K

; include background controlller
include "background/background_controller.z80"

; include graphics data
include "graphics/alphabet_palettes.z80"

; main function
; bootstrap ROM
; clear pallete, background, window and sprite maps
main:
    nop 
    ; disable interrupts
    di
    ; load stack
    ld sp, $ffff

    ; initialize background
    call bgc_initialize_background

    ; TEMP
    ; load intial background palettes
    ld hl, alphabet_palette_begin
    ld de, alphabet_palette_end - alphabet_palette_begin
    ld bc, 0 ; target palette index (each palette has 4 colors)
    call bgc_load_background_palette

    ; start display register
    ; set lcd on
    ; set bg memory to 8000 and 9800
    ; set bg layer on
    ; set sprite 16 x 8 pixe;s
    ; set sprite layer on
    ; set window memory to 9c000
    ld a, LCDCF_ON|LCDCF_BG8000|LCDCF_BG9800|LCDCF_BGON|LCDCF_OBJ8|LCDCF_OBJON|LCDCF_WIN9C00
    ld [rLCDC], a

.main_loop
        nop
        jp .main_loop
; Project Beest
; Main Assembly File
; Developed by Caio Souza Oliveira
; 7 Aug 2019

; includes
include "inc/hardware.inc"

; interrupt routine reservation
section "interrupt_vector", rom0[$0040]
include "infra/interrupt_vector.z80"

; main code section
section "start", rom0[$0100]
    nop 
    jp main

; rom header definition (macro defined in inc/hardware.inc)
; note: ROM name must have 15 bytes (the number indicate the stable build number)
    ROM_HEADER_COLOR    "PBEEST.00000001", CART_MBC5_RAM_BATTERY, ROM_1536K, RAM_32K

; include input handler
include "joypad/input.z80"

; include background controlller
include "background/background_controller.z80"

; include window controller
include "window/window_controller.z80"

; include graphics data
include "graphics/hud_palette.z80"
include "graphics/hud_tiles.z80"

; include hud controller
include "hud/hud_controller.z80"

; include dialogs files
include "hud/dialog/dialogs.z80"

; main function
; bootstrap ROM
; clear pallete, background, window and sprite maps
main:
    nop 
    ; disable interrupts
    di
    ; load stack
    ld sp, $FFFF

    ; initialize background
    call bgc_initialize_background

    ; initialize window
    call wnd_initialize_window

    ; initialize hud
    call hud_initialize_hud

    ; TEMP
    ; load intial background palettes
    ld hl, hud_palette_begin
    ld de, hud_palette_end - hud_palette_begin
    ld bc, 1 ; target palette index (each palette has 4 colors)
    call bgc_load_background_palette

    ; start display register
    ; set lcd on
    ; set bg memory to 8000 and 9800
    ; set bg layer on
    ; set sprite 16 x 8 pixe;s
    ; set sprite layer on
    ; set window memory to 9c000
    ld a, LCDCF_ON|LCDCF_BG8000|LCDCF_BG9800|LCDCF_BGON|LCDCF_OBJ8|LCDCF_OBJON|LCDCF_WIN9C00|LCDCF_WINON
    ld [rLCDC], a

.main_loop
    nop

    ; read input
    call joypad


    ; TEMP 
    ; joypad test
    ld l, key_a
    call is_key_down
    jr z, .next_key_1
        ld h, 7
        ld l, 8*13
        call window_set_window_position
        jr .no_key_detected

.next_key_1:
    ld l, key_b
    call is_key_down
    jr z, .next_key_2
        ld h, 7
        ld l, 8*5
        call window_set_window_position

.next_key_2
    ld l, key_start
    call is_key_down
    jr z, .no_key_detected
        ld de, hello_world_text_end - hello_world_text
        ld hl, hello_world_text
        call hud_copy_text_buffer
        ld de, hello_world_text_end - hello_world_text
        call hud_show_text

.no_key_detected:
    jp .main_loop
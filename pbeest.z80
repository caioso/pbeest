; Project Beest
; Main Assembly File
; Developed by Caio Souza Oliveira
; 7 Aug 2019

; includes
include "inc/hardware.inc"

; interrupt routine reservation
section "interrupt_vector", rom0[$0040]
include "infra/interrupt_vector.z80"

; main code section
section "start", rom0[$0100]
    nop 
    jp main

; rom header definition (macro defined in inc/hardware.inc)
; note: ROM name must have 15 bytes (the number indicate the stable build number)
    ROM_HEADER_COLOR    "PBEEST.00000001", CART_MBC5_RAM_BATTERY, ROM_1536K, RAM_32K

; RAM general use utilities
include "ram/ram_utils.z80"
include "ram/global_variables.z80"

; External functions
include "external/math.z80"

; include time handlers
include "time/delay.z80"

; include input handler
include "joypad/input.z80"

; include tile loader
include "graphics/tiles_loader.z80"

; include display handler
include "graphics/display.z80"

; include background controlller
include "background/background_controller.z80"

; include window controller
include "window/window_controller.z80"

; include graphics data
include "graphics/hud_palette.z80"
include "graphics/hud_tiles.z80"
include "graphics/hero.z80"
include "graphics/hero_palette.z80"

; include sprite controller
include "sprite/sprite_controller.z80"

; include hud controller
include "hud/hud_controller.z80"

; include dialogs files
include "hud/dialog/dialogs.z80"

; include character contoller
include "character/character_controller.z80"

; include map controller
include "map/map_controller.z80"

; include Rooms (to be moved to separate banks in the future)
include "map/rooms/sample_room.z80"
include "map/rooms/sample_room_right.z80"
include "map/rooms/sample_room_top.z80"
include "map/rooms/sample_room_left.z80"
include "map/rooms/sample_room_bottom.z80"

; main function
; bootstrap ROM
; clear pallete, background, window and sprite maps
main:
    ; disable interrupts
    di
    ; load stack
    ld sp, $FFFF

    ; intialize global tile counter
    ld hl, $0
    ld bc, $0
    call initialize_tile_counter

    ; initialize background
    call bgc_initialize_background

    ; initialize window
    call wnd_initialize_window

    ; initialize hud
    call hud_initialize_hud

    ; TEMP
    ; load intial background palettes
    ld hl, hud_palette_begin
    ld de, hud_palette_end - hud_palette_begin
    ; the hud palette must be the last one!
    ld bc, 7 ; target palette index (each palette has 4 colors)
    call bgc_load_background_palette
    
    ; Intialize character tiles and palettes
    call chr_load_character_tiles_and_palettes

    ; Intialize character 0
    ld hl, character_0
    ld c, $50
    ld b, $50
    ld a, $56
    call chr_initialize_character

    ; Initialize Map controller
    call map_initialize_map_controller

    ; load map's tiles and palettes
    ; display no animations, load tiles and palettes (a)
    ; load *sample* room (&hl)
    ; first tile initial address (&bc)
    ; map GRAPHICAL-LUTs position (d:X, e:Y) the logic LUT is always loaded in the same place.a
    ld a, $00
    ld [map_current_room_id], a

    ld a, map_tile_base_section_8000 | map_load_origin | map_load_tiles | map_load_palettes
    ld hl, sample_room_begin
    ld bc, $85A0
    ld de, $0000
    call map_load_room

    ; clear collision values (required before initializing)
    call chr_clear_collision

    ; start display register
    ; set lcd on
    ; set bg memory to 8000 and 9800
    ; set bg layer on
    ; set sprite 16 x 8 pixe;s
    ; set sprite layer on
    ; set window memory to 9c000
    ld a, LCDCF_ON|LCDCF_BG8000|LCDCF_BG9800|LCDCF_BGON|LCDCF_OBJ16|LCDCF_OBJON|LCDCF_WIN9C00|LCDCF_WINON
    ld [rLCDC], a

    ; Double clock speed
    ld a, $01
    ld [rKEY1], a
    stop

    ; Show Welcome Text
    ;ld de, dialog_page_0_end - dialog_page_0
    ;ld hl, dialog_page_0
    ;call hud_copy_text_buffer
    ;ld de, dialog_page_0_end - dialog_page_0
    ;ld a, text_box_start_animation
    ;call hud_show_text

    ;ld de, dialog_page_1_end - dialog_page_1
    ;ld hl, dialog_page_1
    ;call hud_copy_text_buffer
    ;ld de, dialog_page_1_end - dialog_page_1
    ;ld a, text_box_end_animation
    ;call hud_show_text

    ; initialize joypad
    call joypad_initialize

.main_loop
    nop
    call display_wait_vblank

    ; read input
    call joypad
    
    ; Player Controlled Loop Iteration
    call chr_player_controlled_character_loop

    ; ROOM 1 CHECK
    ld a, [map_current_room_id]
    cp $00
    jr nz, .room_1_loop
        ; Check edge collisions
        ; horizontal edges collision check
        ld a, [edget_collision_target_x]
        cp chr_left_edge_limit
        jr z, .load_room_left
        cp chr_right_edge_limit
        jr z, .load_room_right
        ld a, [edget_collision_target_y]
        cp chr_top_edge_limit
        jr z, .load_room_top
        cp chr_bottom_edge_limit
        jr z, .load_room_bottom
        jp .edge_check_complete

.load_room_left:
        ld a, $02
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_left | map_load_tiles | map_load_palettes
        ld hl, sample_room_left_begin
        ld bc, $85A0
        ld de, $0200
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.load_room_right:
        ld a, $01
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_right | map_load_tiles | map_load_palettes
        ld hl, sample_room_right_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.load_room_top:
        ld a, $03
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_above | map_load_tiles | map_load_palettes
        ld hl, sample_room_top_begin
        ld bc, $85A0
        ld de, $0102
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.load_room_bottom:
        ld a, $04
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_below | map_load_tiles | map_load_palettes
        ld hl, sample_room_bottom_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.room_1_loop:
    ld a, [map_current_room_id]
    cp $01
    jr nz, .room_2_loop
         ; joypad test
        ld l, key_a
        call is_key_down
        jr z, .edge_detection_right
            ; check colision target, to show correct message
            ld hl, collision_target
            ld a, [hl]
            cp a, $01
            jr nz, .edge_detection_right
                ; First Target
                ld de, dialog_page_right_end - dialog_page_right
                ld hl, dialog_page_right
                call hud_copy_text_buffer
                ld de, dialog_page_right_end - dialog_page_right
                ld a, text_box_all_animations 
                call hud_show_text

.edge_detection_right:
        ; Check edge collisions
        ; horizontal edges collision check
        ld a, [edget_collision_target_x]
        cp $20
        jr z, .load_room_left_back_to_center
            jp .edge_check_complete

.load_room_left_back_to_center:
        ld a, $00
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_left 
        ld hl, sample_room_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.room_2_loop:
    ld a, [map_current_room_id]
    cp $02
    jr nz, .room_3_loop
        ; joypad test
        ld l, key_a
        call is_key_down
        jr z, .edge_detection_left
            ; check colision target, to show correct message
            ld hl, collision_target
            ld a, [hl]
            cp a, $01
            jr nz, .edge_detection_left
                ; First Target
                ld de, dialog_page_left_end - dialog_page_left
                ld hl, dialog_page_left
                call hud_copy_text_buffer
                ld de, dialog_page_left_end - dialog_page_left
                ld a, text_box_all_animations
                call hud_show_text

        ; Check edge collisions
        ; horizontal edges collision check
.edge_detection_left:
        ld a, [edget_collision_target_x]
        cp $15
        jr z, .load_room_right_back_to_center
            jp .edge_check_complete

.load_room_right_back_to_center:
        ld a, $00
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_right
        ld hl, sample_room_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.room_3_loop:
    ld a, [map_current_room_id]
    cp $03
    jr nz, .room_4_loop
         ; joypad test
        ld l, key_a
        call is_key_down
        jr z, .edge_detection_down
            ; check colision target, to show correct message
            ld hl, collision_target
            ld a, [hl]
            cp a, $01
            jr nz, .edge_detection_down
                ; First Target
                ld de, dialog_page_down_end - dialog_page_down
                ld hl, dialog_page_down
                call hud_copy_text_buffer
                ld de, dialog_page_down_end - dialog_page_down
                ld a, text_box_all_animations 
                call hud_show_text

.edge_detection_down:
        ; Check edge collisions
        ; horizontal edges collision check
        ld a, [edget_collision_target_y]
        cp $90
        jr z, .load_room_below_back_to_center
            jp .edge_check_complete

.load_room_below_back_to_center:
        ld a, $00
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_below
        ld hl, sample_room_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.room_4_loop:
    ld a, [map_current_room_id]
    cp $04
    jr nz, .edge_check_complete
        ; joypad test
        ld l, key_a
        call is_key_down
        jr z, .edge_detection_up
            ; check colision target, to show correct message
            ld hl, collision_target
            ld a, [hl]
            cp a, $01
            jr nz, .edge_detection_up
                ; First Target
                ld de, dialog_page_up_end - dialog_page_up
                ld hl, dialog_page_up
                call hud_copy_text_buffer
                ld de, dialog_page_up_end - dialog_page_up
                ld a, text_box_all_animations 
                call hud_show_text

        ; Check edge collisions
        ; horizontal edges collision check
.edge_detection_up:
        ld a, [edget_collision_target_y]
        cp $00
        jr z, .load_room_above_back_to_center
            jp .edge_check_complete

.load_room_above_back_to_center:
        ld a, $00
        ld [map_current_room_id], a

        ld a, map_tile_base_section_8000 | map_load_above
        ld hl, sample_room_begin
        ld bc, $85A0
        ld de, $0000
        call map_load_room
        call chr_clear_collision
        jp .edge_check_complete

.edge_check_complete:
    ; TEMP 
    ; joypad test
;     ld l, key_a
;     call is_key_down
;     jr z, .detect_up
;         ; check colision target, to show correct message
;         ld hl, collision_target
;         ld a, [hl]
;         cp a, $01
;         jr nz, .dialog_2
;             ; First Target
;             ld de, dialog_page_0_end - dialog_page_0
;             ld hl, dialog_page_0
;             call hud_copy_text_buffer
;             ld de, dialog_page_0_end - dialog_page_0
;             jr .show_text
; .dialog_2:
;         cp a, $02
;         jr nz, .detect_up
;             ; First Page
;         ld de, dialog_page_1_end - dialog_page_1
;         ld hl, dialog_page_1
;         call hud_copy_text_buffer
;         ld de, dialog_page_1_end - dialog_page_1

; .show_text:

;         ld a, text_box_all_animations ;text_box_start_animation
;         call hud_show_text
;         jr .no_key_detected

; .detect_up:
;         ld l, key_up
;         call is_key_down
;         jr z, .detect_down
;             call display_wait_vblank
;             ld a, map_tile_base_section_8000 | map_load_above
;             ld hl, sample_room_top_begin
;             ld bc, $85A0
;             call map_load_room
;             jr .no_key_detected

; .detect_down:
;         ld l, key_down
;         call is_key_down
;         jr z, .detect_left
;             call display_wait_vblank
;             ld a, map_tile_base_section_8000 | map_load_below
;             ld hl, sample_room_bottom_begin
;             ld bc, $85A0
;             call map_load_room
;             jr .no_key_detected
    
; .detect_left:
;         ld l, key_left
;         call is_key_down
;         jr z, .detect_right
;             call display_wait_vblank
;             ld a, map_tile_base_section_8000 | map_load_left
;             ld hl, sample_room_left_begin
;             ld bc, $85A0
;             call map_load_room
;             jr .no_key_detected

; .detect_right:
;         ld l, key_right
;         call is_key_down
;         jr z, .no_key_detected
;             call display_wait_vblank
;             ld a, map_tile_base_section_8000 | map_load_right
;             ld hl, sample_room_right_begin
;             ld bc, $85A0
;             call map_load_room
;             jr .no_key_detected
            ; no need to load new palletes or tiles
            ;ld de, $00
            ;ld bc, $5A
            ;call map_load_room
        ; Intermediate Page
        ;ld de, dialog_page_1_end - dialog_page_1
        ;ld hl, dialog_page_1
        ;call hud_copy_text_buffer
        ;ld de, dialog_page_1_end - dialog_page_1
        ;ld a, text_box_end_animation ;text_box_no_animations
        ;call hud_show_text

        ; Final Page
        ;ld de, dialog_page_2_end - dialog_page_2
        ;ld hl, dialog_page_2
        ;call hud_copy_text_buffer
        ;ld de, dialog_page_2_end - dialog_page_2
        ;ld a, text_box_end_animation
        ;call hud_show_text

        ; delay settings
        ; $FF -> outer loop control (255 times)
        ; $02 -> inner loop contorl (2 times)
        ;ld hl, $FFFF
        ;call time_controlled_two_step_delay

        ; Standalone Page
        ;ld de, dialog_page_3_end - dialog_page_3
        ;ld hl, dialog_page_3
        ;call hud_copy_text_buffer
        ;ld de, dialog_page_3_end - dialog_page_3
        ;ld a, text_box_all_animations
        ;call hud_show_text

        ; delay settings
        ; $FF -> outer loop control (255 times)
        ; $02 -> inner loop contorl (2 times)
        ;ld hl, $FFFF
        ;call time_controlled_two_step_delay

        ; Standalone Page
        ;ld de, dialog_page_4_end - dialog_page_4
        ;ld hl, dialog_page_4
        ;call hud_copy_text_buffer
        ;ld de, dialog_page_4_end - dialog_page_4
        ;ld a, text_box_all_animations
        ;call hud_show_text

        ; delay settings
        ; $FF -> outer loop control (255 times)
        ; $02 -> inner loop contorl (2 times)
        ;ld hl, $FFFF
        ;call time_controlled_two_step_delay

        ; Standalone Page
        ;ld de, dialog_page_5_end - dialog_page_5
        ;ld hl, dialog_page_5
        ;call hud_copy_text_buffer
        ;ld de, dialog_page_5_end - dialog_page_5
        ;ld a, text_box_all_animations
        ;call hud_show_text
        

.no_key_detected:
    jp .main_loop
; Project Beest
; HUD Control Routines
; Developed by Caio Souza Oliveira
; 8 Aug 2019

; constants or labels
text_buffer_size equ 36
text_line_1_begin equ _SCRN1 + 32 + 1
text_line_2_begin equ _SCRN1 + 32*3 + 1
text_line_size equ 18

; global variables
text_buffer equ _RAM + 1
text_line equ text_buffer + text_buffer_size

; include textbox map
include "hud/text_box.z80"

hud_initialize_hud:
    ; initialize hud tiles
    ld hl, hud_tiles
    ld bc, hud_tiles_end - hud_tiles
    ld de, _VRAM

    ; copy hud tiles
.copy_hud:
    ld a, [hl]
    ld [de], a
    inc hl
    inc de
    dec bc
    ld a, c
    or b
    jr nz, .copy_hud

    ; copy text box map
    ; Video Bank 1 (window/bg tiles)
    ld a, 0
    ld [rVBK], a

    ld bc, _SCRN1
    ld hl, text_box_map
    ld de, 0
    push de
.copy_text_box_map:
    ld a, [hl]
    ld [bc], a
    inc hl
    inc bc

    ; check whether 20 columns have been reached
    pop de
    inc de
    ld a, 20
    sub a, e
    jr nz, .continue_copy
        ld a, c
        add a, 12
        ld c, a
        ld a, b
        adc a, 0
        ld b, a
        ld de, 0
.continue_copy:
    push de
    ld de, text_box_map_end
    ld a, e
    sub a, l
    ld e, a
    ld a, d
    sbc a, h
    ld d, a
    or e
    jr nz, .copy_text_box_map

    ; copy set box map attributes
    ; Video Bank 1 (window/bg tiles)
    ld a, 1
    ld [rVBK], a

    ld bc, _SCRN1
    ; number of tiles

    ld de, text_box_map_end - text_box_map
    ld hl, 0

    ; TEMPORARY
.copy_text_box_map_attribute:
    ; load pallete #1
    ld a, 1
    ld [bc], a
    inc bc
    dec de
    inc hl

        ; check whether 20 columns have been reached
        ld a, 20
        sub l
        jr nz, .continue_attribute_copy
            ld a, c
            add a, 12
            ld c, a
            ld a, b
            adc a, 0
            ld b, a
            ld hl, 0

.continue_attribute_copy:
    ld a, e
    or d
    jr nz, .copy_text_box_map_attribute
    ret

; Shows text stored in the address held by text_buffer, with size of de
; This function assumes that the window tiles have already their attributes are set correctly (only the tiles will be updated)
; de: text size
; return: no return
hud_show_text:
    ; Video Bank 1 (window/bg tiles)
    ld a, $00
    ld [rVBK], a

    ; initialize line controller
    ld hl, text_line
    ld a, 0
    ld [hl], a
    ld hl, text_line_1_begin
    ld bc, text_buffer
    ld a, 0
    push de
.load_text_bytes
    
    ; call delay
    push hl
    ; $FF -> outer loop control (255 times)
    ; $20 -> inner loop contorl (32 times)
    ld hl, $FF10 
    call time_controlled_two_step_delay 
    pop hl

    ; wait for vline interrupt
    call display_wait_vblank

    ld a, [bc]
    cp a, $FF
    jr z, .skip_char
        ld [hl], a
; space detected
.skip_char 
    inc bc
    inc hl

    ; check whether the current line is finished
    push bc
    ld bc, text_line_size + text_line_1_begin
    ld a, c
    sub a, l
    ld c, a
    ld a, b
    sbc a, h
    ld b, a
    or c
    jr nz, .continue_in_the_same_line
        ld hl, text_line_2_begin

.continue_in_the_same_line:
    pop bc
    pop de
    dec de
    push de
    ld a, d
    or e
    jr nz, .load_text_bytes
    ret

; copy text constant to text buffer
; hl: text constant address
; de: text size
hud_copy_text_buffer:
    ld bc, text_buffer
    push de
.text_copy:
    ld a, [hl]
    ld [bc], a
    inc hl
    inc bc
    pop de
    dec de
    push de
    ld a, d
    or e
    jr nz, .text_copy
    ret
